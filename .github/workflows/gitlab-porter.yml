name: Port Ironbank Images to GitLab

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  Image_Porter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository from GitHub
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Modify Git User
      - name: Configure Git User
        run: |
          git config --global user.name 'Uday Beswal'
          git config --global user.email 'uday@beswal.com'

      # Clone the GitLab Repository
      - name: Clone GitLab Repository
        run: |
          mkdir gitlab_repo
          cd gitlab_repo
          git init
          git remote add origin "https://oauth2:${{ secrets.GITLAB_TOKEN }}@gitlab.com/udaybeswal/rf-test/.git"
          git fetch origin main
          git checkout main

      - name: Iterate over each image and create a PR
        run: |
          # Load the image mapper JSON file and iterate over each image
          cat ./gitlab-mapper.json | jq -r 'keys[]' | while IFS= read -r image_name; do
            # Retrieve the corresponding GitHub and GitLab paths from the JSON mapper
            github_path=$(jq -r --arg name "$image_name" '.[$name].Github' < ./gitlab-mapper.json)
            gitlab_path=$(jq -r --arg name "$image_name" '.[$name].Gitlab' < ./gitlab-mapper.json)

            # Construct full paths with community_images
            github_full_path="community_images/${github_path}"
            gitlab_full_path="community_images/${gitlab_path}"

            # Sync files from GitHub to GitLab excluding .git and image.yml
            rsync -av --progress "$github_full_path/" "./gitlab_repo/$gitlab_full_path/" --exclude='.git' --exclude='docker-compose.yml' --exclude='image.yml'

            # Create a new branch for each image
            cd gitlab_repo
            new_branch="sync-branch-$image_name-$(date +%Y%m%d%H%M%S)"
            git checkout -b $new_branch

            # Add and commit the changes, only if there are any
            git add .
            if git diff-index --quiet HEAD; then
              echo "No changes to commit for $image_name"
            else
              git commit -m "Sync changes for $image_name from GitHub"
              git push origin $new_branch

              # Create a merge request with the image name in the title
              project_id=60657614
              curl --request POST --header "PRIVATE-TOKEN: ${{ secrets.GITLAB_TOKEN }}" \
              --data "source_branch=$new_branch&target_branch=main&title=Sync updates for $image_name" \
              "https://gitlab.com/api/v4/projects/${project_id}/merge_requests"

              git checkout main
            fi

            # Go back to the main directory
            cd ..
          done
